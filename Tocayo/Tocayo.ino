#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#define NUMFLAKES     10 // Number of snowflakes in the animation example

#define LOGO_HEIGHT   16
#define LOGO_WIDTH    16
#define OLED_RESET 4
Adafruit_SSD1306 display(OLED_RESET);
// 'WhatsApp Image 2025-05-29 at 15', 128x32px
const unsigned char epd_bitmap_WhatsApp_Image_2025_05_29_at_15 [] PROGMEM = {
	0x55, 0x55, 0xbf, 0xff, 0xfb, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0x56, 0xda, 0xed, 0x55, 0x6d, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x54, 
	0x55, 0x6d, 0x7f, 0xff, 0xf6, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xaa, 0xab, 0x55, 0xb7, 0x5a, 0x2a, 0xad, 0x49, 0x24, 0x92, 0x55, 0x55, 0x55, 0x24, 0x92, 0x22, 
	0x55, 0xad, 0x7f, 0xfd, 0xf7, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x88, 
	0xaa, 0xb5, 0xb6, 0xd7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x12, 0x49, 0x24, 0xaa, 0xaa, 0x00, 
	0xad, 0x56, 0xdf, 0xbf, 0xff, 0xfd, 0xdd, 0xdd, 0xff, 0xfe, 0x84, 0x22, 0x08, 0x00, 0x00, 0x52, 
	0x55, 0xb5, 0x75, 0xea, 0xbf, 0xb7, 0x7f, 0xff, 0xb7, 0xfb, 0xa1, 0x08, 0xa2, 0xa4, 0x92, 0x00, 
	0xaa, 0xdb, 0x5e, 0xbf, 0xd5, 0xfd, 0xeb, 0x6b, 0xfd, 0x5e, 0xe4, 0x42, 0x08, 0x00, 0x00, 0x94, 
	0xad, 0x55, 0xb5, 0x52, 0x6e, 0xab, 0x5d, 0xbd, 0x57, 0xf7, 0xb1, 0x10, 0x41, 0x2a, 0xaa, 0x00, 
	0xab, 0x6e, 0xda, 0xaa, 0xaa, 0xad, 0xaa, 0xd5, 0xed, 0x5a, 0xdc, 0x45, 0x14, 0x40, 0x00, 0x22, 
	0x55, 0xb5, 0x6a, 0x55, 0x55, 0x55, 0x6d, 0x56, 0xb7, 0xb6, 0xf6, 0x10, 0x41, 0x12, 0x90, 0x00, 
	0x95, 0x57, 0xb5, 0x55, 0xbb, 0xf6, 0xb7, 0xfb, 0xdd, 0x6d, 0xad, 0xef, 0x00, 0x00, 0x01, 0x00, 
	0x56, 0xda, 0x52, 0xaa, 0xcc, 0x95, 0x54, 0x04, 0x25, 0xb7, 0x5a, 0x34, 0x88, 0x00, 0x00, 0x10, 
	0xaa, 0xb5, 0x2a, 0x49, 0x21, 0x2a, 0xa2, 0x92, 0xaa, 0xad, 0xed, 0x4a, 0xa5, 0x55, 0x55, 0x45, 
	0x55, 0xae, 0xa5, 0x24, 0x08, 0x4f, 0x54, 0x49, 0x56, 0xfb, 0x74, 0x24, 0x48, 0x08, 0x00, 0x10, 
	0x56, 0xdb, 0xb5, 0xda, 0xa6, 0xab, 0xab, 0xb6, 0xbb, 0xae, 0xab, 0xd2, 0x92, 0xa2, 0xaa, 0xab, 
	0x55, 0x6d, 0x7a, 0x6b, 0x7a, 0xbe, 0xfa, 0x5b, 0xed, 0x21, 0x48, 0x29, 0x25, 0x55, 0x29, 0x44, 
	0xab, 0x55, 0xbe, 0x95, 0x42, 0x93, 0x56, 0xca, 0x50, 0x08, 0x05, 0x04, 0x90, 0x08, 0x84, 0x29, 
	0x2d, 0x7a, 0xdf, 0x52, 0x2a, 0x48, 0x95, 0xb5, 0x00, 0x85, 0x20, 0xa2, 0x0a, 0xa4, 0x52, 0x92, 
	0xaa, 0xcf, 0x77, 0x8a, 0x80, 0x04, 0x4a, 0x41, 0x52, 0x20, 0x12, 0x08, 0x41, 0x5b, 0xff, 0xff, 
	0x55, 0x75, 0x5e, 0xf1, 0x55, 0x6a, 0xaa, 0xde, 0xa0, 0x09, 0x40, 0x41, 0x2f, 0xff, 0x49, 0x21, 
	0x2b, 0x95, 0xbf, 0x0a, 0x29, 0x12, 0xaa, 0xa9, 0x40, 0x00, 0x0a, 0x14, 0x16, 0xd0, 0x2a, 0x4f, 
	0x55, 0x74, 0x80, 0xa4, 0x84, 0xa8, 0x4a, 0xb7, 0xa8, 0xa4, 0x80, 0x81, 0x47, 0xff, 0xaa, 0xb5, 
	0x55, 0x0a, 0x10, 0x10, 0x12, 0x4b, 0x55, 0x5a, 0x40, 0x12, 0x55, 0x5a, 0x09, 0x55, 0xff, 0xef, 
	0x08, 0xa1, 0x25, 0x42, 0x00, 0x00, 0x00, 0x21, 0x50, 0xa5, 0x10, 0xa4, 0x20, 0x00, 0x00, 0x00, 
	0xa2, 0x14, 0x80, 0x10, 0x80, 0x48, 0x22, 0x04, 0x00, 0x48, 0x8a, 0x50, 0x85, 0x54, 0x80, 0x10, 
	0x14, 0xa2, 0x15, 0x42, 0x08, 0x00, 0x89, 0x52, 0xc4, 0x95, 0x21, 0x4a, 0x00, 0x00, 0x12, 0x45, 
	0x40, 0x08, 0x80, 0x10, 0x42, 0x20, 0x00, 0x00, 0x10, 0x44, 0x15, 0x28, 0x24, 0x44, 0x80, 0x00, 
	0x12, 0x42, 0x25, 0x44, 0x10, 0x8a, 0x10, 0x00, 0x00, 0x2a, 0xa8, 0xa4, 0x80, 0x10, 0x12, 0x52, 
	0x40, 0x88, 0x80, 0x11, 0x44, 0x00, 0xc2, 0x4a, 0x44, 0xa2, 0x45, 0x10, 0x09, 0x01, 0x00, 0x00, 
	0x0a, 0x00, 0x28, 0x80, 0x11, 0x52, 0x10, 0x00, 0x10, 0x15, 0x12, 0xaa, 0x20, 0x04, 0x22, 0x08
};

// Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 528)
const int epd_bitmap_allArray_LEN = 1;
const unsigned char* epd_bitmap_allArray[1] = {
	epd_bitmap_WhatsApp_Image_2025_05_29_at_15
};

void setup() 
{
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);  // here the 0x3c is the I2C address, check your i2c address if u have multiple devices.
  display.clearDisplay();
  delay(2000);

}

void loop() 
{
  display.drawBitmap(0, 0, epd_bitmap_WhatsApp_Image_2025_05_29_at_15, 128, 64, WHITE);
  display.display();
}

#define XPOS   0 // Indexes into the 'icons' array in function below
#define YPOS   1
#define DELTAY 2

void testanimate(const uint8_t *bitmap, uint8_t w, uint8_t h) {
  int8_t f, icons[NUMFLAKES][3];

  // Initialize 'snowflake' positions
  for(f=0; f< NUMFLAKES; f++) {
    icons[f][XPOS]   = random(1 - LOGO_WIDTH, display.width());
    icons[f][YPOS]   = -LOGO_HEIGHT;
    icons[f][DELTAY] = random(1, 6);
    Serial.print(F("x: "));
    Serial.print(icons[f][XPOS], DEC);
    Serial.print(F(" y: "));
    Serial.print(icons[f][YPOS], DEC);
    Serial.print(F(" dy: "));
    Serial.println(icons[f][DELTAY], DEC);
  }

  for(;;) { // Loop forever...
    display.clearDisplay(); // Clear the display buffer

    // Draw each snowflake:
    for(f=0; f< NUMFLAKES; f++) {
      display.drawBitmap(icons[f][XPOS], icons[f][YPOS], bitmap, w, h, SSD1306_WHITE);
    }

    display.display(); // Show the display buffer on the screen
    delay(200);        // Pause for 1/10 second

    // Then update coordinates of each flake...
    for(f=0; f< NUMFLAKES; f++) {
      icons[f][YPOS] += icons[f][DELTAY];
      // If snowflake is off the bottom of the screen...
      if (icons[f][YPOS] >= display.height()) {
        // Reinitialize to a random position, just off the top
        icons[f][XPOS]   = random(1 - LOGO_WIDTH, display.width());
        icons[f][YPOS]   = -LOGO_HEIGHT;
        icons[f][DELTAY] = random(1, 6);
      }
    }
  }
}
